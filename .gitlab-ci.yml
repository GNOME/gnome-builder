stages:
    - test

flatpak:
    image: registry.gitlab.gnome.org/gnome/gnome-runtime-images/gnome:3.28
    stage: test

    variables:
        GIT_SUBMODULE_STRATEGY: normal
        FLATPAK_ARTIFACT: gnome-builder-git.flatpak

    script:
        # Create a neme for the .flatpak bundle that will be extracted
        # - export FLATPAK_ARTIFACT=gnome-builder-${COMMIT_REF_SHA}.flatpak

        # Build the flatpak repo
        - flatpak-builder --stop-at=gnome-builder app build-aux/flatpak/org.gnome.Builder.json
        - flatpak build app meson --prefix=/app _build
        - flatpak build app ninja -C _build install
        - flatpak-builder --finish-only --repo=repo app build-aux/flatpak/org.gnome.Builder.json

        # Make a flatpak for people to test
        - flatpak build-bundle repo $FLATPAK_ARTIFACT --runtime-repo=https://sdk.gnome.org/gnome-nightly.flatpakrepo org.gnome.Builder

        # Run tests inside the Flatpak env
        # - flatpak-builder --run app build-aux/flatpak/org.gnome.Builder.json ninja -C _build tes

    artifacts:
        paths:
            - $FLATPAK_ARTIFACT
        expire_in: 2 days

    cache:
        # JOB_NAME - Each job will have it's own cache
        # COMMIT_REF_SLUG = Lowercase name of the branch
        # ^ Keep diffrerent caches for each branch
        key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
        paths:
            # Cache .flatpak-builder
            - .flatpak-builder/cache/
            - .flatpak-builder/downloads/
            - .flatpak-builder/git/
