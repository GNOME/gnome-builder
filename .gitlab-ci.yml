stages:
    - test

flatpak:master:
    # image: registry.gitlab.com/alatiera/gnome-nightly-oci/gnome-master:latest
    stage: test

    variables:
        GIT_SUBMODULE_STRATEGY: normal

    before_script:
        - flatpak remote-add --user gnome-nightly --if-not-exists https://sdk.gnome.org/gnome-nightly.flatpakrepo
        - flatpak install -y --user gnome-nightly org.gnome.Sdk org.gnome.Platform
        - flatpak update -y --user

    script:
        # Build the flatpak repo
        - flatpak-builder --user --stop-at=gnome-builder app build-aux/flatpak/org.gnome.Builder.json
        - flatpak-builder --user --run app build-aux/flatpak/org.gnome.Builder.json meson --prefix=/app --libdir=/app/lib _build
        - flatpak-builder --user --run app build-aux/flatpak/org.gnome.Builder.json ninja -C _build install
        - flatpak-builder --user --finish-only app build-aux/flatpak/org.gnome.Builder.json
        - flatpak --user build-export repo app

        # Make a flatpak for people to test
        - flatpak --user build-bundle repo gnome-builder-dev.flatpak org.gnome.Builder

        # Run tests inside the Flatpak env
        # - flatpak-builder --run app build-aux/flatpak/org.gnome.Builder.json ninja -C _build test

    after_script:
        - git clean -f

    artifacts:
        paths:
            - gnome-builder-dev.flatpak
        expire_in: 2 days

    cache:
        # JOB_NAME - Each job will have it's own cache
        # COMMIT_REF_SLUG = Lowercase name of the branch
        # ^ Keep diffrerent caches for each branch
        key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
        paths:
            # Cache .flatpak-builder
            - .flatpak-builder/cache/
