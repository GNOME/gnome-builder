<!DOCTYPE node PUBLIC
        "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
        "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd" >
<node xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <!--
    Copyright 2019 Christian Hergert <chergert@redhat.com>
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
    SPDX-License-Identifier: GPL-3.0-or-later
  -->
  <interface name="org.gnome.Builder.Flatpak.Service">
    <!--
      The directory to use for FLATPAK_CONFIG_DIR.
    -->
    <property name="ConfigDir" type="s" access="read"/>
    <!--
      The default architecture of the system, such as "x86_64".
    -->
    <property name="DefaultArch" type="s" access="read"/>
    <signal name="RuntimeAdded">
      <!--
        Param is (name, arch, branch, sdk_name, sdk_branch, metadata, is_sdk_extension)
      -->
      <arg name="runtime" direction="in" type="(sssssssb)"/>
    </signal>
    <!--
      AddInstallation:
      @path: the path of the installation
      @is_user: if the installation is a user installation

      Adds an installation to the list of monitored installations.
    -->
    <method name="AddInstallation">
      <arg name="path" direction="in" type="ay"/>
      <arg name="is_user" direction="in" type="b"/>
    </method>
    <!--
      ListRuntimes:

      Lists the available runtimes for use as development.
    -->
    <method name="ListRuntimes">
      <arg name="runtimes" direction="out" type="a(sssssssb)"/>
    </method>
    <!--
      Get information on the runtime.
    -->
    <method name="GetRuntime">
      <arg name="id" direction="in" type="s"/>
      <arg name="runtime" direction="out" type="(sssssssb)"/>
    </method>
    <!--
      RuntimeIsKnown:
      @name: a runtime name to lookup in form name/arch/branch

      Checks to see if any installation knows about the runtime.
    -->
    <method name="RuntimeIsKnown">
      <arg name="name" direction="in" type="s"/>
      <arg name="is_known" direction="out" type="b"/>
      <arg name="download_size" direction="out" type="x"/>
    </method>
    <!--
      Install:
      @full_ref_names: the full name of the targets to install such as "runtime/org.gnome.Sdk/x86_64/master"
      @transfer: the path of an org.gnome.Builder.Flatpak.Transfer object on the caller side

      Begins the installation of a ref from a configured remote. The operation will not
      complete until the installation has completed.
    -->
    <method name="Install">
      <arg name="full_ref_name" direction="in" type="as"/>
      <arg name="if_not_exists" direction="in" type="b"/>
      <arg name="transfer" direction="in" type="o"/>
      <arg name="parent_window" direction="in" type="s"/>
    </method>
    <!--
      ResolveExtension:
      @sdk: the primary SDK that is being used
      @extension: the extension name that is known

      Tries to locate the proper fully qualified name of a SDK extension based
      on a provided name by locating common parents of @sdk and possible @extension
      matches.
    -->
    <method name="ResolveExtension">
      <arg name="sdk" type="s" direction="in"/>
      <arg name="extension" type="s" direction="in"/>
      <arg name="resolved" type="s" direction="out"/>
    </method>
  </interface>
</node>
